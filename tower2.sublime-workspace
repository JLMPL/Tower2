{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"m_fo",
				"m_focusPos"
			],
			[
				"m_F",
				"m_focusTexture"
			],
			[
				"Skele",
				"SkeletonController"
			],
			[
				"m_camerahodl",
				"m_cameraHolderPitch"
			],
			[
				"m_cam",
				"m_cameraHolderYaw"
			],
			[
				"setUnf",
				"setUniformTexture"
			],
			[
				"m_m",
				"m_meshNode"
			],
			[
				"Scene",
				"SceneNode"
			],
			[
				"ta",
				"transforms"
			],
			[
				"Ent",
				"EntityHandle"
			],
			[
				"Tran",
				"TransformComputation"
			],
			[
				"ent",
				"entity"
			],
			[
				"Tra",
				"TransformSignature"
			],
			[
				"cre",
				"creature"
			],
			[
				"Lve",
				"LevelContext"
			],
			[
				"m_ca",
				"m_camera"
			],
			[
				"atta",
				"attachNode"
			],
			[
				"fuc",
				"function\tfunction"
			],
			[
				"Scen",
				"SceneNode"
			],
			[
				"resul",
				"result1"
			],
			[
				"res",
				"result0"
			],
			[
				"fra",
				"fragPos"
			],
			[
				"vert",
				"vertexes"
			],
			[
				"en",
				"entries"
			],
			[
				"Vert",
				"VertexWeightData"
			],
			[
				"Skin",
				"SkinnedMesh"
			],
			[
				"An",
				"AnimationBundle"
			],
			[
				"Anim",
				"AnimationBundle"
			],
			[
				"setu",
				"setUniformTexture"
			],
			[
				"Inc",
				"include"
			],
			[
				"li",
				"LightNode"
			],
			[
				"Lig",
				"LightNode"
			],
			[
				"S",
				"StaticMesh"
			],
			[
				"m_sh",
				"m_shadowPass0"
			],
			[
				"re",
				"return"
			],
			[
				"co",
				"color"
			],
			[
				"Sce",
				"SceneNode"
			],
			[
				"nor",
				"normal"
			],
			[
				"Nor",
				"normal"
			],
			[
				"Cre",
				"Creature"
			],
			[
				"Co",
				"Config"
			],
			[
				"Dis",
				"DisplayFullscreen"
			],
			[
				"DIh",
				"DisplayHeight"
			],
			[
				"Ani",
				"AnimationState"
			],
			[
				"get",
				"getElementById"
			],
			[
				"updat",
				"updateNumberList"
			],
			[
				"fu",
				"function"
			],
			[
				"gr",
				"group"
			],
			[
				"g",
				"groups"
			],
			[
				"Stat",
				"StateStack"
			],
			[
				"getF",
				"getFacingDir"
			],
			[
				"Crea",
				"CreatureController"
			],
			[
				"m_clo",
				"m_closeCenterPos"
			],
			[
				"Re",
				"Render"
			],
			[
				"an",
				"AnimationManager"
			],
			[
				"Te",
				"TextureManager"
			],
			[
				"Font",
				"FontManager"
			],
			[
				"Mat",
				"MaterialManager"
			],
			[
				"Skinned",
				"SkinnedMeshLoader"
			],
			[
				"SHa",
				"ShaderManager"
			],
			[
				"size",
				"sizey"
			],
			[
				"gl",
				"glyph"
			],
			[
				"bu",
				"bufferSize"
			],
			[
				"buf",
				"bufferSize"
			],
			[
				"Rend",
				"RenderWindow"
			],
			[
				"at",
				"auto"
			],
			[
				"nu",
				"numGroups"
			],
			[
				"gropu",
				"groupSize"
			],
			[
				"tema",
				"teams"
			],
			[
				"m_",
				"m_matchQueue"
			],
			[
				"m_mat",
				"m_matchQueue"
			],
			[
				"m_at",
				"m_matchResults"
			],
			[
				"score",
				"scorea"
			],
			[
				"gRen",
				"gRenderer3D"
			],
			[
				"Phys",
				"PhysicsSystem"
			],
			[
				"fir",
				"firstone"
			],
			[
				"ang",
				"angles"
			],
			[
				"angl",
				"angles"
			],
			[
				"M_",
				"M_TAU"
			],
			[
				"ve",
				"vector"
			],
			[
				"buc",
				"bucketCaps"
			],
			[
				"kid",
				"kidpos"
			],
			[
				"que",
				"Question"
			],
			[
				"CRE",
				"CRETURE_STATE_BODY"
			],
			[
				"art",
				"artistID"
			],
			[
				"hie",
				"hideAllProps"
			],
			[
				"hide",
				"hideAllProps"
			],
			[
				"De",
				"DebugMenuEntry"
			],
			[
				"Deb",
				"DebugMenu"
			],
			[
				"Ga",
				"GameState"
			],
			[
				"Play",
				"PlayingState"
			],
			[
				"Com",
				"CommandType"
			],
			[
				"m_fi",
				"m_finished"
			],
			[
				"m_camerastar",
				"m_cameraStartEye"
			],
			[
				"m_cre",
				"m_creatureEndPos"
			],
			[
				"m_c",
				"m_creatureStartDir"
			],
			[
				"m_fini",
				"m_finishFunc"
			],
			[
				"LErp",
				"LerpOut"
			],
			[
				"Inter",
				"Interactible"
			],
			[
				"Ic",
				"include"
			],
			[
				"m_a",
				"m_animFinished"
			],
			[
				"m_ene",
				"m_enemyHealth"
			],
			[
				"Creat",
				"CreatureStateMachine"
			],
			[
				"m_cur",
				"m_currEyePos"
			],
			[
				"m_far",
				"m_farEyePos"
			],
			[
				"m_ofs",
				"m_offsete"
			],
			[
				"m_of",
				"m_offset"
			],
			[
				"Ev",
				"EventListener"
			],
			[
				"Even",
				"EventListener"
			],
			[
				"sign",
				"sign2"
			],
			[
				"left",
				"leftAxis"
			],
			[
				"cam",
				"camDir"
			],
			[
				"lef",
				"leftAxis"
			],
			[
				"frag",
				"fragCoord"
			],
			[
				"sa",
				"sampler2D"
			],
			[
				"dest",
				"destroyProjectiles"
			],
			[
				"crea",
				"createProjectiles"
			],
			[
				"v",
				"virtual"
			],
			[
				"m_d",
				"m_drawnWeapon"
			],
			[
				"getEq",
				"getEquippedRanged"
			],
			[
				"getEqup",
				"getEquippedWeapon"
			],
			[
				"initp",
				"initPlayerOrEnemy"
			],
			[
				"RE",
				"RenderableHandle"
			],
			[
				"getite",
				"getItemInSlot"
			],
			[
				"Enem",
				"EnemyDeath"
			],
			[
				"Ene",
				"EnemyDeath"
			],
			[
				"At",
				"Attributes"
			],
			[
				"getAt",
				"getAttrib"
			]
		]
	},
	"buffers":
	[
		{
			"file": "src/Animation/Animator.hpp",
			"settings":
			{
				"buffer_size": 1850,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Animation/Animator.cpp",
			"settings":
			{
				"buffer_size": 5420,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Gameplay/Controllers/PlayerController.cpp",
			"settings":
			{
				"buffer_size": 7361,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Gameplay/Controllers/SkeletonController.cpp",
			"settings":
			{
				"buffer_size": 4497,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Animation/Skeleton.cpp",
			"settings":
			{
				"buffer_size": 2373,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Gameplay/Controllers/SkeletonController.hpp",
			"settings":
			{
				"buffer_size": 1223,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/EventSystem/GameEvent.cpp",
			"settings":
			{
				"buffer_size": 334,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/EventSystem/GameEvent.hpp",
			"settings":
			{
				"buffer_size": 942,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/EventSystem/EventSystem.cpp",
			"settings":
			{
				"buffer_size": 253,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/EventSystem/EventSystem.hpp",
			"settings":
			{
				"buffer_size": 309,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "Searching 817 files for \"Category\"\n\n/home/dominik/Desktop/Tower/src/EventSystem/GameEvent.cpp:\n   23: bool GameEvent::isInCategory(Category cat) const\n   25:     return cat & m_category;\n\n/home/dominik/Desktop/Tower/src/EventSystem/GameEvent.hpp:\n    9:     enum Category\n   25:     GameEvent(Category cat, Type type) :\n   26:         m_category(cat), m_type(type)\n   36:     bool isInCategory(Category catg) const;\n   45:     Category m_category = Category::Null;\n\n/home/dominik/Desktop/Tower/src/ThirdParty/ImGui/imgui_demo.cpp:\n 2130:             if (ImGui::CollapsingHeader(\"Category A\")) { ImGui::Text(\"Blah blah blah\"); } ImGui::NextColumn();\n 2131:             if (ImGui::CollapsingHeader(\"Category B\")) { ImGui::Text(\"Blah blah blah\"); } ImGui::NextColumn();\n 2132:             if (ImGui::CollapsingHeader(\"Category C\")) { ImGui::Text(\"Blah blah blah\"); } ImGui::NextColumn();\n\n/home/dominik/Desktop/Tower/src/ThirdParty/json/json.hpp:\n  457: using iterator_category_t = typename T::iterator_category;\n  535:         is_detected<iterator_category_t, traits>::value &&\n 1617:         using iterator_category = std::input_iterator_tag;\n 2389:                  std::is_same<typename std::iterator_traits<IteratorType>::iterator_category, std::random_access_iterator_tag>::value,\n 2432:                             std::is_base_of<std::random_access_iterator_tag, typename std::iterator_traits<decltype(std::begin(std::declval<ContiguousContainer const>()))>::iterator_category>::value,\n 5535:     /// iterator_category, value_type, difference_type, pointer, and reference.\n 5537:     using iterator_category = std::bidirectional_iterator_tag;\n 18444:                      typename std::iterator_traits<IteratorType>::iterator_category>::value, int>::type = 0>\n 18457:                      typename std::iterator_traits<IteratorType>::iterator_category>::value, int>::type = 0>\n 18466:                      typename std::iterator_traits<IteratorType>::iterator_category>::value, int>::type = 0>\n\n/home/dominik/Desktop/Tower/src/ThirdParty/sol2/sol/container_traits.hpp:\n  575: \t\t\ttypedef typename meta::iterator_tag<iterator>::type iterator_category;\n  576: \t\t\ttypedef std::is_same<iterator_category, std::input_iterator_tag> is_input_iterator;\n  613: \t\t\tstatic error_result at_category(std::input_iterator_tag, lua_State* L, T& self, std::ptrdiff_t pos) {\n  633: \t\t\tstatic error_result at_category(std::random_access_iterator_tag, lua_State* L, T& self, std::ptrdiff_t pos) {\n  644: \t\t\t\treturn at_category(iterator_category(), L, self, pos);\n  656: \t\t\tstatic error_result get_category(std::input_iterator_tag, lua_State* L, T& self, K& key) {\n  676: \t\t\tstatic error_result get_category(std::random_access_iterator_tag, lua_State* L, T& self, K& key) {\n  687: \t\t\t\treturn get_category(iterator_category(), L, self, key);\n  730: \t\t\tstatic error_result set_category(std::input_iterator_tag, lua_State* L, T& self, stack_object okey, stack_object value) {\n  748: \t\t\tstatic error_result set_category(std::random_access_iterator_tag, lua_State* L, T& self, stack_object okey, stack_object value) {\n  809: \t\t\t\treturn set_category(iterator_category(), L, self, std::move(key), std::move(value));\n\n/home/dominik/Desktop/Tower/src/ThirdParty/sol2/sol/stack_iterator.hpp:\n   38: \t\ttypedef std::random_access_iterator_tag iterator_category;\n\n/home/dominik/Desktop/Tower/src/ThirdParty/sol2/sol/table_iterator.hpp:\n   38: \t\ttypedef std::input_iterator_tag iterator_category;\n\n/home/dominik/Desktop/Tower/src/ThirdParty/sol2/sol/traits.hpp:\n  637: \t\tstruct iterator_tag<T, std::conditional_t<false, typename T::iterator_category, void>> {\n  638: \t\t\tusing type = typename T::iterator_category;\n\n43 matches across 8 files\n\n\nSearching 819 files for \"SpawnPickup\"\n\n/home/dominik/Desktop/Tower/src/EventSystem/GameEvent.hpp:\n   14:         SpawnPickup\n   41:     struct SpawnPickupData\n   53:         SpawnPickupData pickup;\n\n/home/dominik/Desktop/Tower/src/Gameplay/Level.cpp:\n  212:     if (event.getType() == GameEvent::Type::SpawnPickup)\n\n/home/dominik/Desktop/Tower/src/Gameplay/Controllers/SkeletonController.cpp:\n  175:     GameEvent event(GameEvent::Type::SpawnPickup);\n\n5 matches across 3 files\n\n\nSearching 819 files for \"SpawnPickup\"\n\n/home/dominik/Desktop/Tower/src/EventSystem/GameEvent.hpp:\n   14:         SpawnPickup\n   41:     struct SpawnPickupData\n   53:         SpawnPickupData pickup;\n\n/home/dominik/Desktop/Tower/src/Gameplay/Level.cpp:\n  212:     if (event.getType() == GameEvent::Type::SpawnPickup)\n\n/home/dominik/Desktop/Tower/src/Gameplay/Controllers/SkeletonController.cpp:\n  175:     GameEvent event(GameEvent::Type::SpawnPickup);\n\n5 matches across 3 files\n",
			"settings":
			{
				"buffer_size": 4668,
				"line_ending": "Unix",
				"name": "Find Results",
				"scratch": true
			}
		},
		{
			"file": "src/Gameplay/Controllers/PlayerController.hpp",
			"settings":
			{
				"buffer_size": 1369,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Gameplay/Level.hpp",
			"settings":
			{
				"buffer_size": 2193,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/State/PlayingState.cpp",
			"settings":
			{
				"buffer_size": 858,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/State/PlayingState.hpp",
			"settings":
			{
				"buffer_size": 562,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Gameplay/Level.cpp",
			"settings":
			{
				"buffer_size": 8815,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Gameplay/Entities/Pickup.cpp",
			"settings":
			{
				"buffer_size": 1887,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/SceneGraph/SceneNode.cpp",
			"settings":
			{
				"buffer_size": 1543,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Physics/PhysicsSystem.cpp",
			"settings":
			{
				"buffer_size": 12372,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Physics/PhysicsSystem.hpp",
			"settings":
			{
				"buffer_size": 4255,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Gameplay/Entities/Pickup.hpp",
			"settings":
			{
				"buffer_size": 705,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Gameplay/Entity.hpp",
			"settings":
			{
				"buffer_size": 1303,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Render/GraphRenderer.cpp",
			"settings":
			{
				"buffer_size": 762,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Interface/HeadsUpDisplay.cpp",
			"settings":
			{
				"buffer_size": 2886,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "bin/Maps/Level0.lua",
			"settings":
			{
				"buffer_size": 321,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "bin/Animations/Bundles/Rigud",
			"settings":
			{
				"buffer_size": 1424,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/SceneGraph/SceneGraph.cpp",
			"settings":
			{
				"buffer_size": 1689,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/SceneGraph/SceneGraph.hpp",
			"settings":
			{
				"buffer_size": 995,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Interface/HeadsUpDisplay.hpp",
			"settings":
			{
				"buffer_size": 1133,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Gameplay/Entities/Creature.cpp",
			"settings":
			{
				"buffer_size": 3943,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Gameplay/Entities/Creature.hpp",
			"settings":
			{
				"buffer_size": 2693,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Animation/Skeleton.hpp",
			"settings":
			{
				"buffer_size": 802,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Gameplay/Entities/LightEffect.cpp",
			"settings":
			{
				"buffer_size": 1236,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				]
			],
			[
				"Packages/C++/C++ Single File.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 64.0,
		"last_filter": "save all",
		"selected_items":
		[
			[
				"save all",
				"File: Save All"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"wrap",
				"Word Wrap: Toggle"
			],
			[
				"SAVE ALL",
				"File: Save All"
			],
			[
				"toggle",
				"View: Toggle Menu"
			],
			[
				"TOGG",
				"View: Toggle Menu"
			],
			[
				"sett",
				"Preferences: Settings"
			],
			[
				"console",
				"Set Syntax: R Console"
			],
			[
				"sav",
				"File: Save All"
			],
			[
				"settings",
				"Preferences: Settings"
			],
			[
				"settign",
				"Preferences: Settings"
			],
			[
				"togg",
				"View: Toggle Menu"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"pack",
				"Package Control: Remove Repository"
			],
			[
				"menu",
				"View: Toggle Menu"
			],
			[
				"SA",
				"File: Save All"
			],
			[
				"tabs",
				"View: Toggle Tabs"
			],
			[
				"open",
				"View: Toggle Open Files in Side Bar"
			],
			[
				"key",
				"Preferences: Key Bindings"
			],
			[
				"side",
				"View: Toggle Side Bar"
			],
			[
				"SAV",
				"File: Save All"
			],
			[
				"save",
				"File: Save All"
			],
			[
				"wr",
				"Word Wrap: Toggle"
			],
			[
				"package",
				"Package Control: Install Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"saveall",
				"File: Save All"
			],
			[
				"wrpa",
				"Word Wrap: Toggle"
			],
			[
				"packa",
				"Package Control: Install Package"
			],
			[
				"ui",
				"UI: Select Color Scheme"
			],
			[
				"colo",
				"Colorsublime: Install Theme"
			],
			[
				"theme",
				"UI: Select Color Scheme"
			]
		],
		"width": 605.0
	},
	"console":
	{
		"height": 440.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/dominik/Desktop/Tower/src",
		"/home/dominik/Desktop/Tower/src/AI",
		"/home/dominik/Desktop/Tower/src/Animation",
		"/home/dominik/Desktop/Tower/src/Audio",
		"/home/dominik/Desktop/Tower/src/Core",
		"/home/dominik/Desktop/Tower/src/Debug",
		"/home/dominik/Desktop/Tower/src/EntitySystem",
		"/home/dominik/Desktop/Tower/src/EntitySystem/Systems",
		"/home/dominik/Desktop/Tower/src/EventSystem",
		"/home/dominik/Desktop/Tower/src/Events",
		"/home/dominik/Desktop/Tower/src/Gameplay",
		"/home/dominik/Desktop/Tower/src/Gameplay/Controllers",
		"/home/dominik/Desktop/Tower/src/Gameplay/Entities",
		"/home/dominik/Desktop/Tower/src/Input",
		"/home/dominik/Desktop/Tower/src/Interface",
		"/home/dominik/Desktop/Tower/src/Physics",
		"/home/dominik/Desktop/Tower/src/Render",
		"/home/dominik/Desktop/Tower/src/Render/2D",
		"/home/dominik/Desktop/Tower/src/Render/Geometry",
		"/home/dominik/Desktop/Tower/src/Render/PostProcess",
		"/home/dominik/Desktop/Tower/src/SceneGraph",
		"/home/dominik/Desktop/Tower/src/Script",
		"/home/dominik/Desktop/Tower/src/State",
		"/home/dominik/Desktop/Tower/bin/Shaders",
		"/home/dominik/Desktop/Tower/bin/Shaders/Interface"
	],
	"file_history":
	[
		"/home/dominik/Desktop/Tower/src/Animation/Animation.cpp",
		"/home/dominik/Desktop/Tower/src/SceneGraph/SceneNode.hpp",
		"/home/dominik/Desktop/Tower/src/Gameplay/Entities/Chest.cpp",
		"/home/dominik/Desktop/Tower (old)/src/Interface/HeadsUpDisplay.cpp",
		"/home/dominik/Desktop/Tower/src/EventSystem/EventSystem.cpp",
		"/home/dominik/Desktop/plunoe.cpp",
		"/home/dominik/Desktop/tretefe",
		"/home/dominik/Desktop/Tower/bin/Shaders/Interface/HudHealth.sha",
		"/home/dominik/Desktop/PhysX/linking",
		"/home/dominik/Desktop/Tower/src/Render/LineRenderer.hpp",
		"/home/dominik/Desktop/Tower/src/Render/LineRenderer.cpp",
		"/home/dominik/Desktop/Tower/src/Render/BasePass.hpp",
		"/home/dominik/Desktop/Tower/src/Render/GraphRenderer.hpp",
		"/home/dominik/Desktop/Tower/src/Render/GraphRenderer.cpp",
		"/home/dominik/Desktop/Tower/src/Gameplay/Entities/Door.hpp",
		"/home/dominik/Desktop/Tower/src/Gameplay/Entities/Door.cpp",
		"/home/dominik/Desktop/Tower/src/Gameplay/Level.cpp",
		"/home/dominik/Desktop/Tower/src/Gameplay/Level.hpp",
		"/home/dominik/Desktop/Tower/src/Physics/PhysicsSystem.hpp",
		"/home/dominik/Desktop/Tower/src/Debug/DebugMenu.hpp",
		"/home/dominik/Desktop/Tower/src/State/PlayingState.hpp",
		"/home/dominik/Desktop/Tower/src/State/PlayingState.cpp",
		"/home/dominik/Desktop/Tower/src/Animation/AnimationState.cpp",
		"/home/dominik/Desktop/Tower/src/Gameplay/Controllers/PlayerController.hpp",
		"/home/dominik/Desktop/Tower/src/Application.cpp",
		"/home/dominik/Desktop/Tower/src/AI/Waynet.cpp",
		"/home/dominik/Desktop/Tower/src/Gameplay/Item.cpp",
		"/home/dominik/Desktop/Tower/src/SceneGraph/SceneGraph.cpp",
		"/home/dominik/Desktop/Tower/src/SceneGraph/SceneGraph.hpp",
		"/home/dominik/Desktop/Tower/src/Render/BasePass.cpp",
		"/home/dominik/Desktop/Tower/src/EntitySystem/Systems/RenderSystem.cpp",
		"/home/dominik/Desktop/Tower/src/Physics/PhysicsSystem.cpp",
		"/home/dominik/Desktop/Tower/src/Debug/DebugMenu.cpp",
		"/home/dominik/Desktop/Tower/src/Gameplay/Entities/Creature.cpp",
		"/home/dominik/Desktop/Tower/bin/Animations/Bundles/Rigud",
		"/home/dominik/Desktop/Tower/src/Gameplay/Controllers/PlayerController.cpp",
		"/home/dominik/Desktop/stuff/meldunek.txt",
		"/home/dominik/Desktop/stuff/studenci.txt",
		"/home/dominik/Desktop/stuff/wypozyczenia.txt",
		"/home/dominik/Desktop/FuckingShitFuckThisFuckingCrap/Zodsy",
		"/home/dominik/Desktop/FuckingShitFuckThisFuckingCrap/zapytania.txt",
		"/home/dominik/Desktop/FuckingShitFuckThisFuckingCrap/notes",
		"/home/dominik/Desktop/FuckingShitFuckThisFuckingCrap/querus",
		"/home/dominik/Desktop/Tower/CMakeLists.txt",
		"/home/dominik/Desktop/FuckingShitFuckThisFuckingCrap/fukduk",
		"/home/dominik/Desktop/stuff/fukduk",
		"/home/dominik/Desktop/FuckingShitFuckThisFuckingCrap/wypozyczenia.txt",
		"/home/dominik/Desktop/Tower/src/Animation/Animator.hpp",
		"/home/dominik/Desktop/Tower/src/Animation/Animator.cpp",
		"/home/dominik/Desktop/Tower/src/Animation/AnimationState.hpp",
		"/home/dominik/Desktop/Tower/src/Gameplay/Entity.hpp",
		"/home/dominik/Desktop/Tower/src/Gameplay/Entities/Pickup.hpp",
		"/home/dominik/Desktop/Tower/src/Gameplay/Entity.cpp",
		"/home/dominik/Desktop/Tower/src/Gameplay/Controllers/SkeletonController.hpp",
		"/home/dominik/Desktop/Tower/bin/Shaders/PointShadow.frag",
		"/home/dominik/Desktop/Tower/src/Render/ShadowPass.cpp",
		"/home/dominik/Desktop/Tower/src/Gameplay/Entities/Creature.hpp",
		"/home/dominik/Desktop/Tower/src/Gameplay/Entities/Interactible.hpp",
		"/home/dominik/Desktop/Tower/src/Interface/HeadsUpDisplay.hpp",
		"/home/dominik/Desktop/Tower/src/Interface/HeadsUpDisplay.cpp",
		"/home/dominik/Desktop/Tower/src/SceneGraph/FlareNode.cpp",
		"/home/dominik/Desktop/Tower/bin/Shaders/Flare.sha",
		"/home/dominik/Desktop/Tower/src/Gameplay/Entities/LightEffect.hpp",
		"/home/dominik/Desktop/Tower/src/Gameplay/Entities/Pickup.cpp",
		"/home/dominik/Desktop/Tower/src/Gameplay/Entities/Lever.cpp",
		"/home/dominik/Desktop/Tower/src/Gameplay/Entities/LightEffect.cpp",
		"/home/dominik/Desktop/Tower/src/SceneGraph/FlareNode.hpp",
		"/home/dominik/Desktop/Tower/src/Render/Shader.hpp",
		"/home/dominik/Desktop/Tower/src/EventSystem/GameEvent.hpp",
		"/home/dominik/Desktop/Tower/src/Interface/InfoPrompt.cpp",
		"/home/dominik/Desktop/Tower/src/Gameplay/PlayerController.hpp",
		"/home/dominik/Desktop/Tower/src/Gameplay/Creature.cpp",
		"/home/dominik/Desktop/Tower/src/Gameplay/Interactible.hpp",
		"/home/dominik/Desktop/Tower/src/Gameplay/Door.hpp",
		"/home/dominik/Desktop/Tower/bin/Materials/materials.json",
		"/home/dominik/Desktop/Tower/src/Gameplay/Chest.hpp",
		"/home/dominik/Desktop/Tower/src/Gameplay/Chest.cpp",
		"/home/dominik/Desktop/Tower/src/Gameplay/Creature.hpp",
		"/home/dominik/Desktop/Tower/src/Gameplay/Door.cpp",
		"/home/dominik/Desktop/Tower/src/SceneGraph/SkinnedMeshNode.hpp",
		"/home/dominik/Desktop/Tower/src/SceneGraph/SkinnedMeshNode.cpp",
		"/home/dominik/Desktop/Tower/src/Gameplay/PlayerController.cpp",
		"/home/dominik/Desktop/Tower/src/Gameplay/CreatureController.hpp",
		"/home/dominik/Desktop/Tower/src/EventSystem/EventSystem.hpp",
		"/home/dominik/Desktop/Tower/src/Interface/InfoPrompt.hpp",
		"/home/dominik/Desktop/Tower/src/Gameplay/Lever.hpp",
		"/home/dominik/Desktop/Tower/src/Gameplay/Lever.cpp",
		"/home/dominik/Desktop/Tower/bin/Shaders/Flat.frag",
		"/home/dominik/Desktop/Tower/src/SceneGraph/SceneNode.cpp",
		"/home/dominik/Desktop/Tower/src/Animation/Skeleton.hpp",
		"/home/dominik/Desktop/Tower/src/EntitySystem/Systems/TransformSystem.cpp",
		"/home/dominik/Desktop/Tower/src/EntitySystem/Scene.hpp",
		"/home/dominik/Desktop/Tower/src/EntitySystem/Scene.cpp",
		"/home/dominik/Desktop/Tower/src/EntitySystem/System.hpp",
		"/home/dominik/Desktop/Tower/src/EntitySystem/System.cpp",
		"/home/dominik/Desktop/Tower/src/EntitySystem/Components.hpp",
		"/home/dominik/Desktop/Tower/src/EntitySystem/Components.cpp",
		"/home/dominik/Desktop/Tower/src/SceneGraph/MeshNode.hpp",
		"/home/dominik/Desktop/Tower/src/EntitySystem/Systems/TransformSystem.hpp",
		"/home/dominik/Desktop/Tower/src/EntitySystem/Systems/RenderSystem.hpp",
		"/home/dominik/Desktop/test/EscapeLinez/src/Multiplayer.hpp",
		"/home/dominik/Desktop/test/EscapeLinez/src/Multiplayer.cpp",
		"/home/dominik/Desktop/test/EscapeLinez/src/Mouse.hpp",
		"/home/dominik/Desktop/test/EscapeLinez/src/Mouse.cpp",
		"/home/dominik/Desktop/test/EscapeLinez/src/Menu.hpp",
		"/home/dominik/Desktop/test/EscapeLinez/src/Menu.cpp",
		"/home/dominik/Desktop/test/EscapeLinez/src/Maze.hpp",
		"/home/dominik/Desktop/test/EscapeLinez/src/Maze.cpp",
		"/home/dominik/Desktop/test/EscapeLinez/src/main.cpp",
		"/home/dominik/Desktop/test/EscapeLinez/src/Login.hpp",
		"/home/dominik/Desktop/test/EscapeLinez/src/Login.cpp",
		"/home/dominik/Desktop/test/EscapeLinez/src/Line.hpp",
		"/home/dominik/Desktop/test/EscapeLinez/src/Line.cpp",
		"/home/dominik/Desktop/test/EscapeLinez/src/json.hpp",
		"/home/dominik/Desktop/test/EscapeLinez/src/Game.hpp",
		"/home/dominik/Desktop/test/EscapeLinez/src/Game.cpp",
		"/home/dominik/Desktop/test/EscapeLinez/src/Font.hpp",
		"/home/dominik/Desktop/test/EscapeLinez/src/Font.cpp",
		"/home/dominik/Desktop/test/EscapeLinez/src/FindTheWayInside.hpp",
		"/home/dominik/Desktop/test/EscapeLinez/src/FindTheWayInside.cpp",
		"/home/dominik/Desktop/test/EscapeLinez/src/ConfigFile.hpp",
		"/home/dominik/Desktop/test/EscapeLinez/src/ConfigFile.cpp",
		"/home/dominik/Desktop/test/EscapeLinez/src/CatchMeIfYouCan.hpp",
		"/home/dominik/Desktop/test/EscapeLinez/src/CatchMeIfYouCan.cpp",
		"/home/dominik/Desktop/test/EscapeLinez/src/Button.hpp",
		"/home/dominik/Desktop/test/EscapeLinez/src/Button.cpp",
		"/home/dominik/Desktop/test/EscapeLinez/src/WaitingRoom.hpp",
		"/home/dominik/Desktop/test/EscapeLinez/src/WaitingRoom.cpp"
	],
	"find":
	{
		"height": 39.0
	},
	"find_in_files":
	{
		"height": 131.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"SpawnPickup",
			"addPickup",
			"addpickup",
			"oneven",
			"enterpain",
			"damage",
			"damage\\",
			"kill",
			"enterPain",
			"health",
			"Backflip",
			"m_hud",
			"());\n",
			"enterIdle",
			"PlayerController",
			"Category",
			"eventsys",
			"8",
			"printf",
			"m_cameraHolder",
			"m_cre->getAnimator()",
			"//",
			"alreadyFiredThisRun",
			"event",
			"RightAxis",
			"rightAxis",
			"RightAxis",
			"rightAxis",
			"camera",
			"move",
			"checkEvents",
			"mixStates",
			"checkForPendingStates",
			"update",
			"mesh",
			"initSkeleton",
			"m_transform",
			");\n",
			"graphrenderer",
			"extractNodes",
			"m_cameraNode",
			"m_lines",
			"getId",
			"animator",
			"li",
			"0",
			"));\n",
			"fragmentColor",
			"m_aflatShader",
			"vao",
			"1",
			"LightNode",
			"pickup",
			"level",
			"item",
			"itemmgr",
			"Level",
			"creature",
			"Creature",
			"controller",
			"Lever",
			"entity",
			"GameEvent::",
			"roughness",
			"Renderer2D",
			"EventListener",
			"controller",
			"g_EventSys",
			"3",
			"Static",
			"TransformSystem",
			"RectTimeData",
			"MyUdpSocket",
			"myudpsocketport",
			"Component",
			"u32",
			"m_col",
			"String",
			"CString",
			"String",
			"CString",
			"String",
			"String&",
			"Path&",
			"Path",
			"SET_bit",
			"SET",
			"event",
			"setState",
			"Run",
			"setState",
			"cbTarget",
			"GameEvent::",
			"bow",
			"GameEvent::Type::",
			"bow",
			"m_back",
			"uHealth",
			"100",
			"m_hpVao",
			"m_tbo",
			"m_vbo",
			"m_vao",
			",\n",
			"he",
			"we",
			"py",
			"px",
			"m_dest",
			"addDoor",
			"Chest",
			"chest",
			"addCreature",
			"addchest",
			"*",
			"GameEvent",
			"m_",
			"this",
			"600",
			"1024",
			"depthTexture",
			"albedoTexture",
			"depthBuffer",
			"albedoBuffer",
			"GL",
			"gl",
			"GL",
			"gl"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"std::string&"
		],
		"reverse": false,
		"show_context": false,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 3,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "src/Animation/Animator.hpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1850,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 32,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "src/Animation/Animator.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5420,
						"regions":
						{
						},
						"selection":
						[
							[
								20,
								21
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 31,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "src/Gameplay/Controllers/PlayerController.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7361,
						"regions":
						{
						},
						"selection":
						[
							[
								2623,
								2623
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 279.0,
						"translation.y": 1355.0,
						"zoom_level": 1.0
					},
					"stack_index": 24,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "src/Gameplay/Controllers/SkeletonController.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4497,
						"regions":
						{
						},
						"selection":
						[
							[
								4352,
								4352
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 3038.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "src/Animation/Skeleton.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2373,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 18,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "src/Gameplay/Controllers/SkeletonController.hpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1223,
						"regions":
						{
						},
						"selection":
						[
							[
								838,
								848
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 648.0,
						"zoom_level": 1.0
					},
					"stack_index": 16,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "src/EventSystem/GameEvent.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 334,
						"regions":
						{
						},
						"selection":
						[
							[
								266,
								266
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "src/EventSystem/GameEvent.hpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 942,
						"regions":
						{
						},
						"selection":
						[
							[
								178,
								178
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 324.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "src/EventSystem/EventSystem.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 253,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "src/EventSystem/EventSystem.hpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 309,
						"regions":
						{
						},
						"selection":
						[
							[
								187,
								187
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				},
				{
					"buffer": 10,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4668,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										122,
										130
									],
									[
										131,
										139
									],
									[
										177,
										185
									],
									[
										263,
										271
									],
									[
										293,
										301
									],
									[
										337,
										345
									],
									[
										385,
										393
									],
									[
										394,
										402
									],
									[
										427,
										435
									],
									[
										438,
										446
									],
									[
										449,
										457
									],
									[
										579,
										587
									],
									[
										697,
										705
									],
									[
										815,
										823
									],
									[
										966,
										974
									],
									[
										1000,
										1008
									],
									[
										1046,
										1054
									],
									[
										1106,
										1114
									],
									[
										1233,
										1241
									],
									[
										1473,
										1481
									],
									[
										1515,
										1523
									],
									[
										1604,
										1612
									],
									[
										1731,
										1739
									],
									[
										1848,
										1856
									],
									[
										1965,
										1973
									],
									[
										2145,
										2153
									],
									[
										2195,
										2203
									],
									[
										2282,
										2290
									],
									[
										2394,
										2402
									],
									[
										2502,
										2510
									],
									[
										2520,
										2528
									],
									[
										2581,
										2589
									],
									[
										2682,
										2690
									],
									[
										2779,
										2787
									],
									[
										2797,
										2805
									],
									[
										2858,
										2866
									],
									[
										2990,
										2998
									],
									[
										3118,
										3126
									],
									[
										3136,
										3144
									],
									[
										3323,
										3331
									],
									[
										3456,
										3464
									],
									[
										3610,
										3618
									],
									[
										3673,
										3681
									],
									[
										3825,
										3836
									],
									[
										3855,
										3866
									],
									[
										3886,
										3897
									],
									[
										4014,
										4025
									],
									[
										4149,
										4160
									],
									[
										4304,
										4315
									],
									[
										4334,
										4345
									],
									[
										4365,
										4376
									],
									[
										4493,
										4504
									],
									[
										4628,
										4639
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								4310,
								4310
							]
						],
						"settings":
						{
							"detect_indentation": false,
							"line_numbers": false,
							"output_tag": 3,
							"result_base_dir": "",
							"result_file_regex": "^([^ \t].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1278.0,
						"zoom_level": 1.0
					},
					"stack_index": 14,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "src/Gameplay/Controllers/PlayerController.hpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1369,
						"regions":
						{
						},
						"selection":
						[
							[
								907,
								890
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 486.0,
						"zoom_level": 1.0
					},
					"stack_index": 25,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "src/Gameplay/Level.hpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2193,
						"regions":
						{
						},
						"selection":
						[
							[
								1100,
								1100
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 530.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "src/State/PlayingState.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 858,
						"regions":
						{
						},
						"selection":
						[
							[
								855,
								855
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 26,
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "src/State/PlayingState.hpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 562,
						"regions":
						{
						},
						"selection":
						[
							[
								144,
								144
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 27,
					"type": "text"
				},
				{
					"buffer": 15,
					"file": "src/Gameplay/Level.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8815,
						"regions":
						{
						},
						"selection":
						[
							[
								5332,
								5332
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3564.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 16,
					"file": "src/Gameplay/Entities/Pickup.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1887,
						"regions":
						{
						},
						"selection":
						[
							[
								586,
								586
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 54.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 17,
					"file": "src/SceneGraph/SceneNode.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1543,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 18,
					"file": "src/Physics/PhysicsSystem.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 12372,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 19,
					"file": "src/Physics/PhysicsSystem.hpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4255,
						"regions":
						{
						},
						"selection":
						[
							[
								741,
								759
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 486.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 20,
					"file": "src/Gameplay/Entities/Pickup.hpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 705,
						"regions":
						{
						},
						"selection":
						[
							[
								634,
								634
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 54.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 21,
					"file": "src/Gameplay/Entity.hpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1303,
						"regions":
						{
						},
						"selection":
						[
							[
								720,
								685
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 432.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 22,
					"file": "src/Render/GraphRenderer.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 762,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 30,
					"type": "text"
				},
				{
					"buffer": 23,
					"file": "src/Interface/HeadsUpDisplay.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2886,
						"regions":
						{
						},
						"selection":
						[
							[
								2514,
								2514
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 594.0,
						"zoom_level": 1.0
					},
					"stack_index": 21,
					"type": "text"
				},
				{
					"buffer": 24,
					"file": "bin/Maps/Level0.lua",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 321,
						"regions":
						{
						},
						"selection":
						[
							[
								315,
								315
							]
						],
						"settings":
						{
							"syntax": "Packages/Lua/Lua.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 22,
					"type": "text"
				},
				{
					"buffer": 25,
					"file": "bin/Animations/Bundles/Rigud",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1424,
						"regions":
						{
						},
						"selection":
						[
							[
								1320,
								1320
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 432.0,
						"zoom_level": 1.0
					},
					"stack_index": 17,
					"type": "text"
				},
				{
					"buffer": 26,
					"file": "src/SceneGraph/SceneGraph.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1689,
						"regions":
						{
						},
						"selection":
						[
							[
								1540,
								1540
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 786.0,
						"zoom_level": 1.0
					},
					"stack_index": 28,
					"type": "text"
				},
				{
					"buffer": 27,
					"file": "src/SceneGraph/SceneGraph.hpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 995,
						"regions":
						{
						},
						"selection":
						[
							[
								912,
								912
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 324.0,
						"zoom_level": 1.0
					},
					"stack_index": 29,
					"type": "text"
				},
				{
					"buffer": 28,
					"file": "src/Interface/HeadsUpDisplay.hpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1133,
						"regions":
						{
						},
						"selection":
						[
							[
								357,
								357
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 270.0,
						"zoom_level": 1.0
					},
					"stack_index": 23,
					"type": "text"
				},
				{
					"buffer": 29,
					"file": "src/Gameplay/Entities/Creature.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3943,
						"regions":
						{
						},
						"selection":
						[
							[
								2677,
								2677
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 212.0,
						"zoom_level": 1.0
					},
					"stack_index": 15,
					"type": "text"
				},
				{
					"buffer": 30,
					"file": "src/Gameplay/Entities/Creature.hpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2693,
						"regions":
						{
						},
						"selection":
						[
							[
								2216,
								2216
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 456.0,
						"zoom_level": 1.0
					},
					"stack_index": 20,
					"type": "text"
				},
				{
					"buffer": 31,
					"file": "src/Animation/Skeleton.hpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 802,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 19,
					"type": "text"
				},
				{
					"buffer": 32,
					"file": "src/Gameplay/Entities/LightEffect.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1236,
						"regions":
						{
						},
						"selection":
						[
							[
								644,
								644
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 26.0
	},
	"input":
	{
		"height": 222.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": false,
	"output.exec":
	{
		"height": 178.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.unsaved_changes":
	{
		"height": 280.0
	},
	"pinned_build_system": "",
	"project": "tower2.sublime-project",
	"replace":
	{
		"height": 48.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"skeleoncon",
				"src/Gameplay/Controllers/SkeletonController.cpp"
			],
			[
				"",
				"src/Gameplay/Entities/LightEffect.cpp"
			],
			[
				"pick",
				"src/Gameplay/Entities/Pickup.cpp"
			],
			[
				"lighef",
				"src/Gameplay/Entities/LightEffect.cpp"
			],
			[
				"animaton",
				"src/Animation/Animation.cpp"
			],
			[
				"level",
				"src/Gameplay/Level.hpp"
			],
			[
				"lelv",
				"src/Gameplay/Level.cpp"
			],
			[
				"scneno",
				"src/SceneGraph/SceneNode.cpp"
			],
			[
				"lev",
				"src/Gameplay/Level.hpp"
			],
			[
				"ent",
				"src/Gameplay/Entity.hpp"
			],
			[
				"physicsy",
				"src/Physics/PhysicsSystem.cpp"
			],
			[
				"evens",
				"src/EventSystem/EventSystem.cpp"
			],
			[
				"game",
				"src/EventSystem/GameEvent.hpp"
			],
			[
				"skelonc",
				"src/Gameplay/Controllers/SkeletonController.cpp"
			],
			[
				"skelcon",
				"src/Gameplay/Controllers/SkeletonController.cpp"
			],
			[
				"cre",
				"src/Gameplay/Entities/Creature.cpp"
			],
			[
				"skele",
				"src/Animation/Skeleton.hpp"
			],
			[
				"skelon",
				"src/Animation/Skeleton.cpp"
			],
			[
				"hud",
				"src/Interface/HeadsUpDisplay.hpp"
			],
			[
				"playcon",
				"src/Gameplay/Controllers/PlayerController.cpp"
			],
			[
				"chest",
				"src/Gameplay/Entities/Chest.cpp"
			],
			[
				"gamen",
				"src/EventSystem/GameEvent.hpp"
			],
			[
				"playercon",
				"src/Gameplay/Controllers/PlayerController.cpp"
			],
			[
				"plays",
				"src/State/PlayingState.cpp"
			],
			[
				"plasy",
				"src/State/PlayingState.cpp"
			],
			[
				"gamev",
				"src/EventSystem/GameEvent.cpp"
			],
			[
				"scengr",
				"src/SceneGraph/SceneGraph.cpp"
			],
			[
				"leve",
				"src/Gameplay/Level.hpp"
			],
			[
				"graphre",
				"src/Render/GraphRenderer.cpp"
			],
			[
				"skeleont",
				"src/Gameplay/Controllers/SkeletonController.cpp"
			],
			[
				"levelc",
				"src/Gameplay/Level.cpp"
			],
			[
				"gameev",
				"src/EventSystem/GameEvent.hpp"
			],
			[
				"hudhe",
				"Shaders/Interface/HudHealth.sha"
			],
			[
				"placyon",
				"src/Gameplay/Controllers/PlayerController.cpp"
			],
			[
				"animator",
				"src/Animation/Animator.hpp"
			],
			[
				"anims",
				"src/Animation/AnimationState.hpp"
			],
			[
				"scenen",
				"src/SceneGraph/SceneNode.hpp"
			],
			[
				"playerocn",
				"src/Gameplay/Controllers/PlayerController.cpp"
			],
			[
				"animations",
				"src/Animation/AnimationState.hpp"
			],
			[
				"debugmen",
				"src/Debug/DebugMenu.cpp"
			],
			[
				"physys",
				"src/Physics/PhysicsSystem.cpp"
			],
			[
				"baspe",
				"src/Render/BasePass.cpp"
			],
			[
				"door",
				"src/Gameplay/Entities/Door.cpp"
			],
			[
				"rendersy",
				"src/EntitySystem/Systems/RenderSystem.cpp"
			],
			[
				"basepa",
				"src/Render/BasePass.cpp"
			],
			[
				"leel",
				"src/Gameplay/Level.hpp"
			],
			[
				"liner",
				"src/Render/LineRenderer.hpp"
			],
			[
				"linere",
				"src/Render/LineRenderer.cpp"
			],
			[
				"baspa",
				"src/Render/BasePass.cpp"
			],
			[
				"pla",
				"src/State/PlayingState.cpp"
			],
			[
				"shadowp",
				"src/Render/ShadowPass.cpp"
			],
			[
				"lighteff",
				"src/Gameplay/Entities/LightEffect.cpp"
			],
			[
				"shadre",
				"src/Render/Shader.hpp"
			],
			[
				"baseap",
				"src/Render/BasePass.cpp"
			],
			[
				"flare",
				"Shaders/Flare.sha"
			],
			[
				"scenegr",
				"src/SceneGraph/SceneGraph.hpp"
			],
			[
				"placon",
				"src/Gameplay/Controllers/PlayerController.cpp"
			],
			[
				"entiy",
				"src/Gameplay/Entity.hpp"
			],
			[
				"levl",
				"src/Gameplay/Level.cpp"
			],
			[
				"flat",
				"Shaders/Flat.frag"
			],
			[
				"lver",
				"src/Gameplay/Lever.hpp"
			],
			[
				"intera",
				"src/Gameplay/Interactible.hpp"
			],
			[
				"creaturcon",
				"src/Gameplay/CreatureController.hpp"
			],
			[
				"skinmeno",
				"src/SceneGraph/SkinnedMeshNode.cpp"
			],
			[
				"skinemn",
				"src/SceneGraph/SkinnedMeshNode.cpp"
			],
			[
				"scnen",
				"src/SceneGraph/SceneNode.cpp"
			],
			[
				"sknimen",
				"src/SceneGraph/SkinnedMeshNode.hpp"
			],
			[
				"skeleon",
				"src/Animation/Skeleton.hpp"
			],
			[
				"comp",
				"src/EntitySystem/Components.hpp"
			],
			[
				"rendsy",
				"src/EntitySystem/Systems/RenderSystem.cpp"
			],
			[
				"scen",
				"src/EntitySystem/Scene.hpp"
			],
			[
				"syst",
				"src/EntitySystem/System.hpp"
			],
			[
				"tran",
				"src/EntitySystem/Systems/TransformSystem.cpp"
			],
			[
				"sys",
				"src/EntitySystem/System.hpp"
			],
			[
				"net",
				"~/Desktop/test/EscapeLinez/src/Network.hpp"
			],
			[
				"netwo",
				"~/Desktop/test/EscapeLinez/src/Network.hpp"
			],
			[
				"main",
				"src/main.cpp"
			],
			[
				"scene",
				"src/EntitySystem/Scene.cpp"
			],
			[
				"sce",
				"src/EntitySystem/Scene.cpp"
			],
			[
				"trans",
				"src/EntitySystem/Systems/TransformSystem.cpp"
			],
			[
				"play",
				"src/State/PlayingState.cpp"
			],
			[
				"scne",
				"src/EntitySystem/Scene.hpp"
			],
			[
				"transfo",
				"src/EntitySystem/Systems/TransformSystem.hpp"
			],
			[
				"system",
				"src/EntitySystem/System.hpp"
			],
			[
				"type",
				"src/Core/Types.hpp"
			],
			[
				"itemmana",
				"src/Gameplay/ItemManager.cpp"
			],
			[
				"playeocn",
				"src/Gameplay/PlayerController.cpp"
			],
			[
				"gamee",
				"src/EventSystem/GameEvent.cpp"
			],
			[
				"hael",
				"Shaders/Interface/HudHealth.sha"
			],
			[
				"spriet",
				"src/Render/2D/Sprite.cpp"
			],
			[
				"rend2",
				"src/Render/Renderer2D.cpp"
			],
			[
				"rende",
				"src/Render/Renderer2D.cpp"
			],
			[
				"sprite",
				"src/Render/2D/Sprite.cpp"
			],
			[
				"shader",
				"src/Render/Shader.hpp"
			],
			[
				"render2",
				"src/Render/Renderer2D.cpp"
			],
			[
				"spri",
				"src/Render/2D/Sprite.cpp"
			],
			[
				"spir.c",
				"src/Render/2D/Sprite.cpp"
			],
			[
				"huds",
				"Shaders/Interface/Hud.sha"
			],
			[
				"lever",
				"src/Gameplay/Lever.cpp"
			],
			[
				"graph",
				"src/Render/GraphRenderer.cpp"
			],
			[
				"framebuf",
				"src/Render/Framebuffer.cpp"
			],
			[
				"garphre",
				"src/Render/GraphRenderer.cpp"
			],
			[
				"base",
				"src/Render/BasePass.cpp"
			],
			[
				"physis",
				"src/Physics/PhysicsSystem.hpp"
			],
			[
				"intefac",
				"src/Interface/Interface.cpp"
			],
			[
				"interfac",
				"src/Interface/Interface.cpp"
			],
			[
				"pickup",
				"src/Gameplay/Pickup.cpp"
			],
			[
				"animationsy",
				"src/Animation/AnimationSystem.cpp"
			],
			[
				"anmator",
				"src/Animation/Animator.cpp"
			],
			[
				"animasy",
				"src/Animation/AnimationSystem.cpp"
			],
			[
				"animsy",
				"src/Animation/AnimationSystem.hpp"
			],
			[
				"physsy",
				"src/Physics/PhysicsSystem.hpp"
			],
			[
				"scengrp",
				"src/SceneGraph/SceneGraph.cpp"
			],
			[
				"scnegrp",
				"src/SceneGraph/SceneGraph.cpp"
			],
			[
				"lc",
				"src/Gameplay/Lever.cpp"
			],
			[
				"sceng",
				"src/SceneGraph/SceneGraph.cpp"
			],
			[
				"arro",
				"src/Gameplay/Arrow.hpp"
			],
			[
				"proje",
				"src/Gameplay/Projectile.cpp"
			],
			[
				"cha",
				"src/Physics/CharacterController.hpp"
			],
			[
				"crer",
				"src/Gameplay/Creature.cpp"
			],
			[
				"phys",
				"src/Physics/PhysicsSystem.hpp"
			],
			[
				"playco",
				"src/Gameplay/PlayerController.cpp"
			],
			[
				"state",
				"src/State/State.hpp"
			],
			[
				"statest",
				"src/State/StateStack.cpp"
			],
			[
				"app",
				"src/Application.cpp"
			],
			[
				"statesta",
				"src/State/StateStack.cpp"
			],
			[
				"interaction",
				"src/Gameplay/Interaction.cpp"
			],
			[
				"kesy",
				"~/Desktop/Tower/bin/Items/Keys.itm"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Desktop/Tower/Tower.sublime-workspace"
			],
			[
				"ening",
				"~/Desktop/Tower/EngineAPI/EngineAPI.sublime-project"
			],
			[
				"nai",
				"~/Desktop/Tower/EngineAPI/EngineAPI.sublime-project"
			],
			[
				"en",
				"~/Desktop/Tower/EngineAPI/EngineAPI.sublime-project"
			],
			[
				"eng",
				"~/Desktop/Tower/EngineAPI/EngineAPI.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 249.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 392.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": false,
	"side_bar_visible": true,
	"side_bar_width": 279.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
